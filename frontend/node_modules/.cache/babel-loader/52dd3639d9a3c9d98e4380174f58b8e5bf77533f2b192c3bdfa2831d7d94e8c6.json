{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StateOverview=_ref=>{var _stats$total_househol,_stats$total_personda,_stats$total_families;let{stats,districts}=_ref;if(!stats)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"state-overview\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"overview-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Uttar Pradesh - MGNREGA Overview\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Comprehensive performance across all 75 districts\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card large\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-number\",children:stats.total_districts}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Total Districts\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card large\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-number\",children:(_stats$total_househol=stats.total_households_employed)===null||_stats$total_househol===void 0?void 0:_stats$total_househol.toLocaleString()}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Families Employed\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card large\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-number\",children:(_stats$total_personda=stats.total_persondays_generated)===null||_stats$total_personda===void 0?void 0:_stats$total_personda.toLocaleString()}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Work Days Generated\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card large\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-number\",children:(_stats$total_families=stats.total_families_100_days)===null||_stats$total_families===void 0?void 0:_stats$total_families.toLocaleString()}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Families Completed 100 Days\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quick-stats\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Key Performance Indicators\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"indicators-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"indicator\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"indicator-label\",children:\"Average Employment per District:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"indicator-value\",children:[Math.round(stats.total_households_employed/stats.total_districts).toLocaleString(),\" families\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"indicator\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"indicator-label\",children:\"Average Work Days per Family:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"indicator-value\",children:[stats.average_days_per_household,\" days\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"indicator\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"indicator-label\",children:\"100 Days Completion Rate:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"indicator-value\",children:[(stats.total_families_100_days/stats.total_households_employed*100).toFixed(1),\"%\"]})]})]})]})]});};export default StateOverview;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","StateOverview","_ref","_stats$total_househol","_stats$total_personda","_stats$total_families","stats","districts","className","children","total_districts","total_households_employed","toLocaleString","total_persondays_generated","total_families_100_days","Math","round","average_days_per_household","toFixed"],"sources":["D:/ALL PROJECTS/mgnrega-project/frontend/src/components/StateOverview.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst StateOverview = ({ stats, districts }) => {\r\n  if (!stats) return null;\r\n\r\n  return (\r\n    <div className=\"state-overview\">\r\n      <div className=\"overview-header\">\r\n        <h2>Uttar Pradesh - MGNREGA Overview</h2>\r\n        <p>Comprehensive performance across all 75 districts</p>\r\n      </div>\r\n\r\n      <div className=\"stats-grid\">\r\n        <div className=\"stat-card large\">\r\n          <div className=\"stat-number\">{stats.total_districts}</div>\r\n          <div className=\"stat-label\">Total Districts</div>\r\n        </div>\r\n        \r\n        <div className=\"stat-card large\">\r\n          <div className=\"stat-number\">{stats.total_households_employed?.toLocaleString()}</div>\r\n          <div className=\"stat-label\">Families Employed</div>\r\n        </div>\r\n        \r\n        <div className=\"stat-card large\">\r\n          <div className=\"stat-number\">{stats.total_persondays_generated?.toLocaleString()}</div>\r\n          <div className=\"stat-label\">Work Days Generated</div>\r\n        </div>\r\n        \r\n        <div className=\"stat-card large\">\r\n          <div className=\"stat-number\">{stats.total_families_100_days?.toLocaleString()}</div>\r\n          <div className=\"stat-label\">Families Completed 100 Days</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"quick-stats\">\r\n        <h3>Key Performance Indicators</h3>\r\n        <div className=\"indicators-grid\">\r\n          <div className=\"indicator\">\r\n            <span className=\"indicator-label\">Average Employment per District:</span>\r\n            <span className=\"indicator-value\">\r\n              {Math.round(stats.total_households_employed / stats.total_districts).toLocaleString()} families\r\n            </span>\r\n          </div>\r\n          <div className=\"indicator\">\r\n            <span className=\"indicator-label\">Average Work Days per Family:</span>\r\n            <span className=\"indicator-value\">{stats.average_days_per_household} days</span>\r\n          </div>\r\n          <div className=\"indicator\">\r\n            <span className=\"indicator-label\">100 Days Completion Rate:</span>\r\n            <span className=\"indicator-value\">\r\n              {((stats.total_families_100_days / stats.total_households_employed) * 100).toFixed(1)}%\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StateOverview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}